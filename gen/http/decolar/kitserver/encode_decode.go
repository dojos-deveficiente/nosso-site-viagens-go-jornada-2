// Code generated by goa v3.2.5, DO NOT EDIT.
//
// decolar go-kit HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/selmison/dojo-1/design

package server

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/selmison/dojo-1/gen/http/decolar/server"
	goahttp "goa.design/goa/v3/http"
)

// EncodeCreatePaisResponse returns a go-kit EncodeResponseFunc suitable for
// encoding decolar create_pais responses.
func EncodeCreatePaisResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeCreatePaisResponse(encoder)
}

// DecodeCreatePaisRequest returns a go-kit DecodeRequestFunc suitable for
// decoding decolar create_pais requests.
func DecodeCreatePaisRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeCreatePaisRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeCreatePaisError returns a go-kit EncodeResponseFunc suitable for
// encoding errors returned by the decolar create_pais endpoint.
func EncodeCreatePaisError(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder, formatter func(err error) goahttp.Statuser) kithttp.ErrorEncoder {
	enc := server.EncodeCreatePaisError(encoder, formatter)
	return func(ctx context.Context, err error, w http.ResponseWriter) {
		enc(ctx, w, err)
	}
}

// EncodeCreateCompaniaResponse returns a go-kit EncodeResponseFunc suitable
// for encoding decolar create_compania responses.
func EncodeCreateCompaniaResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeCreateCompaniaResponse(encoder)
}

// DecodeCreateCompaniaRequest returns a go-kit DecodeRequestFunc suitable for
// decoding decolar create_compania requests.
func DecodeCreateCompaniaRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeCreateCompaniaRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeCreateCompaniaError returns a go-kit EncodeResponseFunc suitable for
// encoding errors returned by the decolar create_compania endpoint.
func EncodeCreateCompaniaError(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder, formatter func(err error) goahttp.Statuser) kithttp.ErrorEncoder {
	enc := server.EncodeCreateCompaniaError(encoder, formatter)
	return func(ctx context.Context, err error, w http.ResponseWriter) {
		enc(ctx, w, err)
	}
}
