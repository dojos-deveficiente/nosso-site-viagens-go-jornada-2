// Code generated by goa v3.2.5, DO NOT EDIT.
//
// decolar client
//
// Command:
// $ goa gen github.com/selmison/dojo-1/design

package decolar

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "decolar" service client.
type Client struct {
	CreatePaisEndpoint      endpoint.Endpoint
	CreateCompaniaEndpoint  endpoint.Endpoint
	CreateAeroportoEndpoint endpoint.Endpoint
}

// NewClient initializes a "decolar" service client given the endpoints.
func NewClient(createPais, createCompania, createAeroporto endpoint.Endpoint) *Client {
	return &Client{
		CreatePaisEndpoint:      createPais,
		CreateCompaniaEndpoint:  createCompania,
		CreateAeroportoEndpoint: createAeroporto,
	}
}

// CreatePais calls the "create_pais" endpoint of the "decolar" service.
func (c *Client) CreatePais(ctx context.Context, p *CreatePaisDTO) (res *PaisDTO, err error) {
	var ires interface{}
	ires, err = c.CreatePaisEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PaisDTO), nil
}

// CreateCompania calls the "create_compania" endpoint of the "decolar" service.
func (c *Client) CreateCompania(ctx context.Context, p *CreateCompaniaDTO) (res *CompaniaDTO, err error) {
	var ires interface{}
	ires, err = c.CreateCompaniaEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CompaniaDTO), nil
}

// CreateAeroporto calls the "create_aeroporto" endpoint of the "decolar"
// service.
func (c *Client) CreateAeroporto(ctx context.Context, p *CreateAeroportoDTO) (res *AeroportoDTO, err error) {
	var ires interface{}
	ires, err = c.CreateAeroportoEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AeroportoDTO), nil
}
