// Code generated by goa v3.2.5, DO NOT EDIT.
//
// decolar service
//
// Command:
// $ goa gen github.com/selmison/dojo-1/design

package decolar

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The decolar service
type Service interface {
	// CreatePais implements create_pais.
	CreatePais(context.Context, *CreatePaisDTO) (res *PaisDTO, err error)
	// CreateCompania implements create_compania.
	CreateCompania(context.Context, *CreateCompaniaDTO) (res *CompaniaDTO, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "decolar"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"create_pais", "create_compania"}

// CreatePaisDTO is the payload type of the decolar service create_pais method.
type CreatePaisDTO struct {
	Nome string
}

// PaisDTO is the result type of the decolar service create_pais method.
type PaisDTO struct {
	ID   string
	Nome string
}

// CreateCompaniaDTO is the payload type of the decolar service create_compania
// method.
type CreateCompaniaDTO struct {
	Nome   string
	PaisID string
}

// CompaniaDTO is the result type of the decolar service create_compania method.
type CompaniaDTO struct {
	ID        string
	Nome      string
	PaisID    string
	CreatedAt string
}

// MakeInvalidFields builds a goa.ServiceError from an error.
func MakeInvalidFields(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "invalid_fields",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "not_found",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
